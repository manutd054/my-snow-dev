HTML
-------------------------------
<div>
  <h4><b><u>Dates for Headings</u></b></h4>
  <p>{{ c.data.hdr_date }}</p>
	<p>{{ c.data.prev_date }}</p>
  <p>{{ c.data.curr_date }}</p>
  <p>{{ c.data.next_date }}</p>
  
  <h4><b><u>Dates for Glide Queries</u></b></h4>
  <p>{{ c.data.prev_date_rng1 }} to {{ c.data.prev_date_rng2 }}</p>
  <p>{{ c.data.curr_date_snow }}</p>
  <p>{{ c.data.next_date_snow }}</p>
  
</div>


---------------------------------------------------

CLIENT SIDE SCRIPT
------------------
function() {
  /* widget controller */
  var c = this;
	
	var curr_day = new Date("8/15/2018");
	var prev_day = new Date("8/15/2018");
	var next_day = new Date("8/15/2018");
	var weekday = curr_day.getDay();
	var year = curr_day.getFullYear();
	
	c.data.hdr_date = curr_day.toShortFormat() + ", " + year;
	c.data.curr_date = curr_day.toShortFormat();
	c.data.curr_date_snow = curr_day.toSNowFormat();
	
	c.data.prev_weekday = weekday;
	switch (weekday) {
		case 0:
			// SUNDAY
			pd = -2;
			nd = 1;
			break;
		case 5:
			// FRIDAY
			pd = -1;
			nd = 3;
			break;
		case 6:
			// SATURDAY
			pd = -1;
			nd = 2;
			break;
		case 1: 
			// MONDAY
			pd = -3;
			nd = 1;
			break;
		default:
			pd = -1;
			nd = 1;
	}
	
	c.data.prev_date = prev_day.addDays(pd).toShortFormat();
	c.data.prev_date_rng1 = prev_day.addDays(nd).toSNowFormat();
	c.data.prev_date_rng2 = prev_day.toSNowFormat();
			
	c.data.next_date = next_day.addDays(pd).toShortFormat();
	c.data.next_date_rng1 = next_day.toSNowFormat();
	c.data.next_date_rng2 = next_day.addDays(nd).toSNowFormat();
	
}

Date.prototype.addDays = function(days) {
	// FUNCTION TO ADD / SUBTRACT DAYS
    var date = new Date(this.valueOf());
    date.setDate(date.getDate() + days);
    return date;
}

Date.prototype.toSNowFormat = function() {   
	// FUNCTION TO CHANGE DATE TO MM/DD/YYYY FORMAT
  function pad(s) { return (s < 10) ? '0' + s : s; }
  var d = new Date(this.valueOf());
  return [pad(d.getMonth()+1), pad(d.getDate()), d.getFullYear()].join('/');
}

Date.prototype.toShortFormat = function() {
	// FUNCTION TO FIND MONTH, DAY FOR THE GIVEN DATE
    var month_names =["Jan","Feb","Mar",
                      "Apr","May","Jun",
                      "Jul","Aug","Sep",
                      "Oct","Nov","Dec"];
	
		var day_names =["Sunday", "Monday","Tuesday","Wednesday",
                    "Thursday","Friday","Saturday"];
    
    var day = ordinal_suffix_of(this.getDate());
	  var wkday = this.getDay();
    var month_index = this.getMonth();
    
    return  day_names[wkday] + ", " + month_names[month_index] + " " + day
}

function ordinal_suffix_of(i) {
	// FUNCTION TO ADD ORDINAL VALUES - ST, ND, RD, TH
    var j = i % 10,
        k = i % 100;
    if (j == 1 && k != 11) {
        return i + "st";
    }
    if (j == 2 && k != 12) {
        return i + "nd";
    }
    if (j == 3 && k != 13) {
        return i + "rd";
    }
    return i + "th";
}

---------------------------------------------------------------------
